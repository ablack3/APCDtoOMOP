/*
CREATE THE CDM.CARE_SITE TABLE

CARE_SITES WILL BE DEFINED AS ORGANIZATIONAL NPIS THAT SUBMIT FACILITY CALIMS
THESE NPIS ARE MEANT TO REPRESENT PHYSICAL LOCATIONS WHERE CARE IS PROVIDED

WE WILL DIFFERENTIATE BETWEEN ORGANIZATIONAL NPIS THAT ONLY APPEAR ON PROFESSIONAL BILLS
THESE NPIS WILL BE CONSIDERED PROFESSIONAL_ORGANIZATIONS

SELECT TOP 10 * FROM STG.NPI;
*/


-- CREATE TAXONOMY MAP TO STANDARD
DROP TABLE IF EXISTS ##TAXONOMY_MAP;
SELECT
    C.CONCEPT_CODE
    ,CR.RELATIONSHIP_ID
    ,CR.CONCEPT_ID_2 AS MAPS_TO_CONCEPT_ID
    ,C2.CONCEPT_NAME AS MAPS_TO_CONCEPT_NAME
INTO ##TAXONOMY_MAP
FROM CDM.CONCEPT C
INNER JOIN CDM.CONCEPT_RELATIONSHIP CR
ON C.CONCEPT_ID = CR.CONCEPT_ID_1
INNER JOIN CDM.CONCEPT C2
ON CR.CONCEPT_ID_2 = C2.CONCEPT_ID
WHERE C.VOCABULARY_ID = 'NUCC' AND CR.RELATIONSHIP_ID = 'Maps to';
-- SELECT * FROM ##TAXONOMY_MAP;
GO

-- CREATE ##CARE_SITE_MAP TEMP TABLE
DROP TABLE IF EXISTS ##CARE_SITE_MAP;
WITH P0 AS(
    -- COLLAPSE TO CLAIM HEADER LEVEL INCLUDING ONLY ORGANZATIONAL NPIS
    SELECT A.NPI, COUNT(*) AS N_FACILITY_CLAIMS
    FROM STG.MC A
    INNER JOIN  STG.NPI B
    ON A.NPI = B.NPI
    WHERE B.ENTTYPE = 'ORGANIZATION' AND BILLTYPE IS NOT NULL
    GROUP BY  A.NPI
)
,P1 AS(
    -- COLLAPSE TO CLAIM HEADER LEVEL INCLUDING ONLY ORGANZATIONAL NPIS
    SELECT A.SERVICING_NPI AS NPI, COUNT(*) AS N_FACILITY_CLAIMS
    FROM STG.MC A
    INNER JOIN  STG.NPI B
    ON A.SERVICING_NPI = B.NPI
    WHERE B.ENTTYPE = 'ORGANIZATION' AND BILLTYPE IS NOT NULL
    GROUP BY  A.SERVICING_NPI
)
,T1 AS(
    -- PUT BILLING AND SERVICING NPIS TOGETHER
    SELECT DISTINCT NPI, N_FACILITY_CLAIMS FROM P0
    UNION
    SELECT DISTINCT NPI, N_FACILITY_CLAIMS FROM P1
)
,T2 AS(
    SELECT
        T1.N_FACILITY_CLAIMS
        ,B.NPI
        ,CASE WHEN ORGNAME2 IS NULL THEN ORGNAME ELSE CONCAT(ORGNAME, ': ', ORGNAME2) END AS ORGNAME
        ,B.PRIMARY_TAXONOMY_CODE
        ,B.PRVZIP
    FROM T1
    INNER JOIN STG.NPI B
    ON T1.NPI = B.NPI
    WHERE N_FACILITY_CLAIMS > 4
)
SELECT *
INTO ##CARE_SITE_MAP
FROM T2
LEFT JOIN ##TAXONOMY_MAP B
ON T2.PRIMARY_TAXONOMY_CODE = B.concept_code
LEFT JOIN CDM.LOCATION L
ON T2.PRVZIP = L.zip
-- SELECT * FROM ##CARE_SITE_MAP;
GO

-- INSERT CARE SITES INTO CDM.CARE_SITE
TRUNCATE TABLE CDM.CARE_SITE;
INSERT INTO CDM.care_site
SELECT
    TRY_CAST(NPI AS BIGINT) AS CARE_SITE_ID
    ,TRY_CAST(SUBSTRING(ORGNAME, 1, 255) AS VARCHAR(255)) AS CARE_SITE_NAME
    ,CASE WHEN MAPS_TO_CONCEPT_ID IS NULL THEN 0 ELSE MAPS_TO_CONCEPT_ID END AS PLACE_OF_SERVICE_CONCEPT_ID
    ,LOCATION_ID D
    ,NPI AS CARE_SITE_SOURCE_VALUE
    ,PRIMARY_TAXONOMY_CODE AS PLACE_OF_SERVICE_SOURCE_VALUE
FROM ##CARE_SITE_MAP
GO



/*

CREATE A SIMILAR TABLE THAT CONTAINS OTHER ORGANIZATIONAL NPIS
THESE ARE ORGANIZATIONAL NPIS THAT ARE NOT CARE SITES
################################################################################
*/



-- CREATE ##OTHER_ORGANIZATION_MAP TEMP TABLE
DROP TABLE IF EXISTS ##OTHER_ORGANIZATION_MAP;
WITH T1 AS(
    SELECT DISTINCT COALESCE(SERVICING_NPI, NPI) AS NPI FROM STG.MC
    UNION
    SELECT DISTINCT COALESCE(NPI, SERVICING_NPI) AS NPI FROM STG.MC
)
,T2 AS(
    -- SELECT ONLY ORGANIZATIONAL NPIS THAT ARE NOT CARE SITES
    SELECT T1.NPI
    FROM T1
    INNER JOIN  STG.NPI B
    ON T1.NPI = B.NPI
    WHERE B.ENTTYPE = 'ORGANIZATION' AND T1.NPI NOT IN(SELECT care_site_source_value FROM CDM.care_site)
)
,T3 AS(
    -- BRING IN OTHER DESCRIPTION FIELDS
    SELECT
        B.NPI
        ,CASE WHEN ORGNAME2 IS NULL THEN ORGNAME ELSE CONCAT(ORGNAME, ': ', ORGNAME2) END AS ORGNAME
        ,B.PRIMARY_TAXONOMY_CODE
        ,B.PRVZIP
    FROM T2
    INNER JOIN STG.NPI B
    ON T2.NPI = B.NPI
)
SELECT *
INTO ##OTHER_ORGANIZATION_MAP
FROM T3
LEFT JOIN ##TAXONOMY_MAP B
ON T3.PRIMARY_TAXONOMY_CODE = B.concept_code
LEFT JOIN CDM.LOCATION L
ON T3.PRVZIP = L.zip
-- SELECT * FROM ##OTHER_ORGANIZATION_MAP;
GO

-- CREATE THE CDM.OTHER_ORGANIZATION_TABLE (MODELED OFF OF CARE SITE)
DROP TABLE IF EXISTS cdm.other_organization
CREATE TABLE cdm.other_organization (
    organization_id BIGINT NOT NULL
    ,organization_name VARCHAR(255) NULL
    ,place_of_service_concept_id INTEGER NOT NULL
    ,location_id BIGINT NULL
    ,organization_source_value VARCHAR(50) NULL
    ,place_of_service_source_value VARCHAR(50) NULL
);
GO


-- INSERT CARE SITES INTO CDM.CARE_SITE
INSERT INTO CDM.other_organization
SELECT
    TRY_CAST(NPI AS BIGINT) AS ORGANIZATION_ID
    ,TRY_CAST(SUBSTRING(ORGNAME, 1, 255) AS VARCHAR(255)) AS ORGANIZATION_NAME
    ,CASE WHEN MAPS_TO_CONCEPT_ID IS NULL THEN 0 ELSE MAPS_TO_CONCEPT_ID END AS PLACE_OF_SERVICE_CONCEPT_ID
    ,LOCATION_ID D
    ,NPI AS ORGANIZATION_SOURCE_VALUE
    ,PRIMARY_TAXONOMY_CODE AS PLACE_OF_SERVICE_SOURCE_VALUE
FROM ##OTHER_ORGANIZATION_MAP
GO

-- DROP TEMP TABLES
DROP TABLE IF EXISTS ##OTHER_ORGANIZATION_MAP;
DROP TABLE IF EXISTS ##CARE_SITE_MAP;
DROP TABLE IF EXISTS ##TAXONOMY_MAP;
GO
