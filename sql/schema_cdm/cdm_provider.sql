/*
CREATE THE CDM.PROVIDER TABLE

PROVIDERS ARE INDIVIDUALS (NOT ORGANZIATIONS)

PROVIDERS ARE ASSOCIATED WITH A SINGLE CARE SITE BASED ON THE TOTAL DOLLAR AMOUNT OF
THE CLAIMS WHERE BOTH NPIS OCCUR OR, IN THE CASE OF TIES, THE NUMBER OF CLAIM LINES WHERE BOTH NPIS OCCUR


SELECT TOP 100 * FROM STG.NPI;
SELECT COUNT(*) FROM STG.NPI;
*/



-- CREATE TAXONOMY MAP TO STANDARD TEMP TABLE
DROP TABLE IF EXISTS ##TAXONOMY_MAP;
SELECT
    C.CONCEPT_CODE
    ,C.concept_id
    ,CR.RELATIONSHIP_ID
    ,CR.CONCEPT_ID_2 AS MAPS_TO_CONCEPT_ID
    ,C2.CONCEPT_NAME AS MAPS_TO_CONCEPT_NAME
INTO ##TAXONOMY_MAP
FROM CDM.CONCEPT C
INNER JOIN CDM.CONCEPT_RELATIONSHIP CR
ON C.CONCEPT_ID = CR.CONCEPT_ID_1
INNER JOIN CDM.CONCEPT C2
ON CR.CONCEPT_ID_2 = C2.CONCEPT_ID
WHERE C.VOCABULARY_ID = 'NUCC' AND CR.RELATIONSHIP_ID = 'Maps to';
-- SELECT * FROM ##TAXONOMY_MAP;
GO

-- CREATE A TEMP TABLE CONTAINING INDIVIDUAL NPIS THAT OCCUR IN THE DATA
DROP TABLE IF EXISTS ##INDIVIDUAL_PROVIDER_NPI;
WITH T1 AS(
    SELECT DISTINCT SERVICING_NPI AS NPI FROM STG.MC WHERE SERVICING_NPI IS NOT NULL
    UNION
    SELECT DISTINCT NPI FROM STG.MC WHERE NPI IS NOT NULL
)
SELECT B.*
INTO ##INDIVIDUAL_PROVIDER_NPI
FROM T1
INNER JOIN STG.NPI B
ON T1.NPI = B.NPI
WHERE ENTTYPE = 'INDIVIDUAL' ;

-- SELECT TOP 10 * FROM ##INDIVIDUAL_PROVIDER_NPI
GO

-- CREATE PROVIDER TO CARE_SITE MAPPING
DROP TABLE IF EXISTS ##PROVIDER_CARE_SITE_MAP;
WITH T1 AS(
SELECT
    -- TPAY + COPAY + DED + COINS + PREPAID AS AMT
    TPAY AS AMT
    ,CASE
        WHEN NPI IN(SELECT CARE_SITE_SOURCE_VALUE FROM CDM.care_site) THEN NPI
        WHEN SERVICING_NPI IN(SELECT CARE_SITE_SOURCE_VALUE FROM CDM.care_site) THEN SERVICING_NPI
        ELSE NULL
    END AS CARE_SITE_NPI
    ,CASE
        WHEN NPI IN(SELECT NPI FROM ##INDIVIDUAL_PROVIDER_NPI) THEN NPI
        WHEN SERVICING_NPI IN(SELECT NPI FROM ##INDIVIDUAL_PROVIDER_NPI) THEN SERVICING_NPI
        ELSE NULL
    END AS PROVIDER_NPI
FROM STG.MC
)
,T2 AS(
SELECT
    PROVIDER_NPI
    ,CARE_SITE_NPI
    ,COUNT(*) AS N_ROWS
    ,SUM(AMT) AS AMT
FROM T1
WHERE PROVIDER_NPI IS NOT NULL AND CARE_SITE_NPI IS NOT NULL AND AMT >= 0
GROUP BY PROVIDER_NPI, CARE_SITE_NPI
)
,T3 AS(
    SELECT *
        ,ROW_NUMBER() OVER(PARTITION BY PROVIDER_NPI ORDER BY AMT DESC, N_ROWS DESC) AS ROW_ORDER
    FROM T2
    -- ORDER BY PROVIDER_NPI
)
SELECT PROVIDER_NPI, CARE_SITE_NPI
INTO ##PROVIDER_CARE_SITE_MAP
FROM T3
WHERE ROW_ORDER = 1;

-- SELECT * FROM ##PROVIDER_CARE_SITE_MAP
GO

-- VERIFY THAT THERE IS ONE ROW PER PROVIDER_NPI IN THE ##PROVIDER_CARE_SITE_MAP TABLE
DECLARE @NUMBER FLOAT;
WITH T1 AS(
	SELECT PROVIDER_NPI, COUNT(*) AS N_RECORDS
	FROM ##PROVIDER_CARE_SITE_MAP
	GROUP BY PROVIDER_NPI
)
,T2 AS(
	SELECT
		N_RECORDS,
		COUNT(*) AS N_NPIS,
		COUNT(*) * 100.0 / SUM(COUNT(*)) OVER() AS PCT_NPIS
	FROM T1
	GROUP BY N_RECORDS
)
SELECT @NUMBER = PCT_NPIS FROM T2 WHERE N_RECORDS = 1;
IF @NUMBER != 100 THROW 50000, 'ONE ROW PER PROVIDER NPI FAILED', 1;
GO



/*
SELECT * FROM CDM.OTHER_ORGANIZATION
*/

-- CREATE PROVIDER TO OTHER ORGANIZATION MAPPING
DROP TABLE IF EXISTS ##PROVIDER_OTHER_ORGANIZATION_MAP;
WITH T1 AS(
SELECT
    -- TPAY + COPAY + DED + COINS + PREPAID AS AMT
    TPAY AS AMT
    ,CASE
        WHEN NPI IN(SELECT ORGANIZATION_SOURCE_VALUE FROM CDM.OTHER_ORGANIZATION) THEN NPI
        WHEN SERVICING_NPI IN(SELECT ORGANIZATION_SOURCE_VALUE FROM CDM.OTHER_ORGANIZATION) THEN SERVICING_NPI
        ELSE NULL
    END AS OTHER_ORGANIZATION_NPI
    ,CASE
        WHEN NPI IN(SELECT NPI FROM ##INDIVIDUAL_PROVIDER_NPI) THEN NPI
        WHEN SERVICING_NPI IN(SELECT NPI FROM ##INDIVIDUAL_PROVIDER_NPI) THEN SERVICING_NPI
        ELSE NULL
    END AS PROVIDER_NPI
FROM STG.MC
)
,T2 AS(
SELECT
    PROVIDER_NPI
    ,OTHER_ORGANIZATION_NPI
    ,COUNT(*) AS N
    ,SUM(AMT) AS AMT
FROM T1
WHERE PROVIDER_NPI IS NOT NULL AND OTHER_ORGANIZATION_NPI IS NOT NULL AND AMT >= 0
GROUP BY PROVIDER_NPI, OTHER_ORGANIZATION_NPI
)
,T3 AS(
    SELECT *
        ,ROW_NUMBER() OVER(PARTITION BY PROVIDER_NPI ORDER BY AMT DESC, N DESC) AS ROW_ORDER
    FROM T2
    -- ORDER BY PROVIDER_NPI
)
SELECT PROVIDER_NPI, OTHER_ORGANIZATION_NPI
INTO ##PROVIDER_OTHER_ORGANIZATION_MAP
FROM T3
WHERE ROW_ORDER = 1;

-- SELECT * FROM ##PROVIDER_OTHER_ORGANIZATION_MAP
GO


-- VERIFY THAT THERE IS ONE ROW PER PROVIDER_NPI IN THE ##PROVIDER_OTHER_ORGANIZATION_MAP TABLE
DECLARE @NUMBER FLOAT;
WITH T1 AS(
	SELECT PROVIDER_NPI, COUNT(*) AS N_RECORDS
	FROM ##PROVIDER_OTHER_ORGANIZATION_MAP
	GROUP BY PROVIDER_NPI
)
,T2 AS(
	SELECT
		N_RECORDS,
		COUNT(*) AS N_NPIS,
		COUNT(*) * 100.0 / SUM(COUNT(*)) OVER() AS PCT_NPIS
	FROM T1
	GROUP BY N_RECORDS
)
SELECT @NUMBER = PCT_NPIS FROM T2 WHERE N_RECORDS = 1;
IF @NUMBER != 100 THROW 50000, 'ONE ROW PER PROVIDER NPI FAILED', 1;
GO



-- CREATE A TEMPORARY PROVIDER TABLE WITH ALL NECESSARY INFORMATION
DROP TABLE IF EXISTS ##PROVIDER_TABLE;
WITH T1 AS(
    SELECT A.*, B.CARE_SITE_NPI, C.OTHER_ORGANIZATION_NPI, D.*, E.location_id
    FROM ##INDIVIDUAL_PROVIDER_NPI A
    LEFT JOIN ##PROVIDER_CARE_SITE_MAP B
        ON A.NPI = B.PROVIDER_NPI
    LEFT JOIN ##PROVIDER_OTHER_ORGANIZATION_MAP C
        ON A.NPI = C.PROVIDER_NPI
    LEFT JOIN ##TAXONOMY_MAP D
        ON A.PRIMARY_TAXONOMY_CODE = D.concept_code
    LEFT JOIN CDM.location E
        ON A.PRVZIP = E.ZIP
    WHERE ENTTYPE = 'INDIVIDUAL'
)
SELECT
    TRY_CAST(NPI AS BIGINT) AS PROVIDER_ID
    ,CAST(PRVNAME AS VARCHAR(255)) AS PROVIDER_NAME
    ,TRY_CAST(SUBSTRING(NPI, 1, 20) AS VARCHAR(20)) AS NPI
    ,CAST(NULL AS VARCHAR(20)) AS DEA
    ,CASE WHEN MAPS_TO_CONCEPT_ID IS NULL THEN 0 ELSE MAPS_TO_CONCEPT_ID END AS SPECIALTY_CONCEPT_ID
    ,TRY_CAST(CARE_SITE_NPI AS BIGINT) AS CARE_SITE_ID
    ,CAST(NULL AS INTEGER) AS YEAR_OF_BIRTH
    ,0 AS GENDER_CONCEPT_ID
    ,NPI AS PROVIDER_SOURCE_VALUE
    ,PRIMARY_TAXONOMY_CODE AS SPECIALTY_SOURCE_VALUE
    ,CASE WHEN CONCEPT_ID IS NULL THEN 0 ELSE CONCEPT_ID END AS SPECIALTY_SOURCE_CONCEPT_ID
    ,NULL AS GENDER_SOURCE_VALUE
    ,0 AS GENDER_SOURCE_CONCEPT_ID
    ,TRY_CAST(OTHER_ORGANIZATION_NPI AS BIGINT) AS ORGANIZATION_ID
    INTO ##PROVIDER_TABLE
FROM T1;
-- SELECT TOP 10  * FROM ##PROVIDER_TABLE;
-- SELECT COUNT(*) FROM ##PROVIDER_TABLE WHERE PROVIDER_ID IS NULL;
GO




-- POPULATE THE CDM.PROVIDER TABLE
TRUNCATE TABLE CDM.PROVIDER;
INSERT INTO CDM.PROVIDER
SELECT *
FROM ##PROVIDER_TABLE;
GO

-- VERIFY THAT THERE IS ONE ROW PER PROVIDER_NPI IN THE CDM.PROVIDER TABLE
DECLARE @NUMBER FLOAT;
WITH T1 AS(
	SELECT PROVIDER_ID, COUNT(*) AS N_RECORDS
	FROM CDM.provider
	GROUP BY PROVIDER_ID
)
,T2 AS(
	SELECT
		N_RECORDS,
		COUNT(*) AS N_NPIS,
		COUNT(*) * 100.0 / SUM(COUNT(*)) OVER() AS PCT_NPIS
	FROM T1
	GROUP BY N_RECORDS
)
SELECT @NUMBER = PCT_NPIS FROM T2 WHERE N_RECORDS = 1;
IF @NUMBER != 100 THROW 50000, 'ONE ROW PER PROVIDER NPI/ID FAILED', 1;
GO

-- DROP TEMP TABLES
DROP TABLE IF EXISTS ##PROVIDER_TABLE;
DROP TABLE IF EXISTS ##INDIVIDUAL_PROVIDER_NPI;
DROP TABLE IF EXISTS ##PROVIDER_OTHER_ORGANIZATION_MAP;
DROP TABLE IF EXISTS ##PROVIDER_CARE_SITE_MAP;
DROP TABLE IF EXISTS ##TAXONOMY_MAP;
GO

