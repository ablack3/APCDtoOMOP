/*
CREATE THE CDM.OBSERVATION_PERIOD TABLE

*/

-- CREATE CONTINUOUS OBSERVATION PERIODS
DROP TABLE IF EXISTS ##TMP_OBSERVATION_PERIOD;
WITH T1 AS(
 -- CONVERT YEAR AND MONTH TO AN INTEGER REPRESENTING NUM MONTHS SINCE Jan 1960
    SELECT --TOP 1000	
        ME.PATKEY AS PATKEY
        ,(ME.YEAR - 1960)*12 + ME.MONTH - 1 AS ELIG_PERIOD
    FROM STG.ME AS ME
)
,T2 AS(
    -- ADD LAG MONTH SO WE CAN IDENTIFY GAPS IN COVERAGE
    SELECT
	    PATKEY AS PATKEY
	    ,ELIG_PERIOD AS ELIG_PERIOD
	    ,LAG(ELIG_PERIOD, 1, NULL) OVER (PARTITION BY PATKEY ORDER BY ELIG_PERIOD) AS LAG_ELIG_PERIOD
    FROM T1
)
,T3 AS(
    -- IDENTIFY GAPS IN COVERAGE
    SELECT
		PATKEY AS PATKEY
		,ELIG_PERIOD AS ELIG_PERIOD
		,LAG_ELIG_PERIOD AS LAG_ELIG_PERIOD
		,CASE
			WHEN LAG_ELIG_PERIOD IS NULL OR ELIG_PERIOD - LAG_ELIG_PERIOD > 1
				THEN 1
				ELSE 0
		END AS NEW_PERIOD_FLAG
    FROM T2
)
,T4 AS(
    -- USE CUMULATIVE SUM TO CREATE AN ID FOR EACH CONTINUOUS PERIOD OF ELIGIBILITY
    SELECT 
		PATKEY AS PATKEY
		,ELIG_PERIOD AS ELIG_PERIOD
		,SUM(NEW_PERIOD_FLAG) OVER (PARTITION BY PATKEY ORDER BY ELIG_PERIOD ROWS UNBOUNDED PRECEDING) AS PERIOD_ID
    FROM T3		
)
,T5 AS(
    -- GET START AND END DATES (REPRESENTED USING AN INTEGER) FOR EACH PERIOD
    SELECT
		PATKEY AS PATKEY
		,MIN(ELIG_PERIOD) OVER (PARTITION BY PATKEY, PERIOD_ID) AS PERIOD_START
		,MAX(ELIG_PERIOD) OVER (PARTITION BY PATKEY, PERIOD_ID) AS PERIOD_END
    FROM T4
)
,T6 AS(
    -- GET DATE PARTS (MONTH AND YEAR) FOR START AND END DATES
    SELECT DISTINCT
	    PATKEY
	    ,CAST(PERIOD_START AS INT) % 12 + 1 AS MONTH_START
	    ,CAST(PERIOD_END AS INT) % 12 + 1 AS MONTH_END
	    ,FLOOR(PERIOD_START/12) + 1960 AS YEAR_START
	    ,FLOOR(PERIOD_END/12) + 1960 AS YEAR_END
    FROM T5
)
-- CONVERT START AND END DATES TO DATE TYPE
SELECT PATKEY AS PERSON_ID, 
	DATEFROMPARTS(YEAR_START, MONTH_START, 1) AS OBSERVATION_PERIOD_START_DATE,
  	EOMONTH(DATEFROMPARTS(YEAR_END, MONTH_END, 1), 0) AS OBSERVATION_PERIOD_END_DATE,
  	44814722 AS PERIOD_TYPE_CONCEPT_ID --  44814722 is standard concept for Period while enrolled in insurance
INTO ##TMP_OBSERVATION_PERIOD
FROM T6;
GO 


-- LOAD OBSERVATION_PERIOD TABLE
TRUNCATE TABLE CDM.OBSERVATION_PERIOD;
INSERT INTO CDM.OBSERVATION_PERIOD (
    PERSON_ID, 
    OBSERVATION_PERIOD_START_DATE, 
    OBSERVATION_PERIOD_END_DATE, 
    PERIOD_TYPE_CONCEPT_ID)
SELECT *
FROM ##TMP_OBSERVATION_PERIOD
WHERE PERSON_ID IS NOT NULL;
GO 


/*
-- CHECK DISTRIBUTION OF THE NUMBER OF DIFFERENT OBSERVATION PERIODS
-- DOES EVERYONE HAVE AT LEAST ONE OBS PERIOD?
WITH T1 AS(
SELECT 
	PERSON_ID
	,SUM(CASE WHEN OBSERVATION_PERIOD_ID IS NULL THEN 0 ELSE 1 END) AS OBS_PERIOD_COUNT
FROM STG.PATKEY_LIST A
LEFT JOIN CDM.observation_period B
ON A.PATKEY_INT = B.PERSON_ID 
GROUP BY PERSON_ID
)
SELECT OBS_PERIOD_COUNT, COUNT(*) AS PERSON_COUNT 
FROM T1 
GROUP BY OBS_PERIOD_COUNT 
ORDER BY OBS_PERIOD_COUNT
GO 
*/


/*
-- MAYBE RUN A CHECK THAT OBSERVATION PERIODS DO NOT OVERLAP FOR A SINGLE PATIENT
-- THIS IS PROBABLY A DATA CHECK IN ATLAS OR THE DATA QUALITY DASHBOARD
-- CHECK THE POPULATED TABLE
-- SELECT COUNT(*) FROM CDM.OBSERVATION_PERIOD
-- SELECT TOP 100 * FROM CDM.OBSERVATION_PERIOD ORDER BY PERSON_ID, OBSERVATION_PERIOD_START_DATE

*/

